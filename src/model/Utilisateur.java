package model;
// Generated 6 janv. 2016 11:04:49 by Hibernate Tools 4.3.1.Final

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;


/**
 * Utilisateur generated by hbm2java
 */
public class Utilisateur implements java.io.Serializable {

	private int idUtilisateur;
	private TypeUtilisateur typeUtilisateur;
	private String motDePasse;
	private String nom;
	private String prenom;

	public Utilisateur() {
	}

	public Utilisateur(int idUtilisateur, TypeUtilisateur typeUtilisateur) {
		this.idUtilisateur = idUtilisateur;
		this.typeUtilisateur = typeUtilisateur;
	}

	public Utilisateur(int idUtilisateur, TypeUtilisateur typeUtilisateur, String motDePasse, String nom, String prenom) {
		this.idUtilisateur = idUtilisateur;
		this.typeUtilisateur = typeUtilisateur;
		this.motDePasse = motDePasse;
		this.nom = nom;
		this.prenom = prenom;
	}

	public int getIdUtilisateur() {
		return this.idUtilisateur;
	}

	public void setIdUtilisateur(int idUtilisateur) {
		this.idUtilisateur = idUtilisateur;
	}

	public TypeUtilisateur getTypeUtilisateur() {
		return this.typeUtilisateur;
	}

	public void setTypeUtilisateur(TypeUtilisateur typeUtilisateur) {
		this.typeUtilisateur = typeUtilisateur;
	}

	public String getMotDePasse() {
		return this.motDePasse;
	}

	public void setMotDePasse(String motDePasse) {
		this.motDePasse = motDePasse;
	}

	public String getNom() {
		return this.nom;
	}

	public void setNom(String nom) {
		this.nom = nom;
	}

	public String getPrenom() {
		return this.prenom;
	}

	public void setPrenom(String prenom) {
		this.prenom = prenom;
	}
	
	public String toString(){
		return Integer.toString(this.idUtilisateur)+" "+this.typeUtilisateur.getIdTypeUtilisateur()+" "+this.motDePasse+" "+this.nom+" "+this.prenom;
	}
	public static ArrayList<Utilisateur> selectUtilisateur(Connection conn,ConnectionDB database){
		Statement statement = null;
		ResultSet resultat= null;
		ArrayList<Utilisateur> utilisateurs=new ArrayList<Utilisateur>();
		try {
			statement = conn.createStatement();

	        /* Exécution d'une requète de lecture */
	        resultat = statement.executeQuery( "select * from utilisateur" );
	 
	        /* Récupération des données du résultat de la requète de lecture */
	        while ( resultat.next() ) {
	        	utilisateurs.add(new Utilisateur(Integer.parseInt(resultat.getString(1)),database.getTypeUtilisateur(Integer.parseInt(resultat.getString(2))),resultat.getString(3),resultat.getString(4),resultat.getString(5)));
		}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        
		return utilisateurs;
	}

}
