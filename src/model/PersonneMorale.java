// default package
// Generated 6 janv. 2016 11:04:49 by Hibernate Tools 4.3.1.Final

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

/**
 * PersonneMorale generated by hbm2java
 */
public class PersonneMorale implements java.io.Serializable {

	private Client client;
	private String label;
	private Date dateCreation;
	private String nomGerant;
	private String prenomGerant;
	private String adresse;

	public PersonneMorale() {
	}

	public PersonneMorale(Client client) {
		this.client = client;
	}

	public PersonneMorale(Client client, String label, Date dateCreation, String nomGerant, String prenomGerant,
			String adresse) {
		this.client = client;
		this.label = label;
		this.dateCreation = dateCreation;
		this.nomGerant = nomGerant;
		this.prenomGerant = prenomGerant;
		this.adresse = adresse;
	}

	public Client getClient() {
		return this.client;
	}

	public void setClient(Client client) {
		this.client = client;
	}

	public String getLabel() {
		return this.label;
	}

	public void setLabel(String label) {
		this.label = label;
	}

	public Date getDateCreation() {
		return this.dateCreation;
	}

	public void setDateCreation(Date dateCreation) {
		this.dateCreation = dateCreation;
	}

	public String getNomGerant() {
		return this.nomGerant;
	}

	public void setNomGerant(String nomGerant) {
		this.nomGerant = nomGerant;
	}

	public String getPrenomGerant() {
		return this.prenomGerant;
	}

	public void setPrenomGerant(String prenomGerant) {
		this.prenomGerant = prenomGerant;
	}

	public String getAdresse() {
		return this.adresse;
	}

	public void setAdresse(String adresse) {
		this.adresse = adresse;
	}
	
	public static ArrayList<PersonneMorale> selectPersonneMorale(Connection conn,ConnectionDB database){
		Statement statement = null;
		ResultSet resultat= null;
		SimpleDateFormat formatter= new SimpleDateFormat("yyyy-mm-dd");
		ArrayList<PersonneMorale> personne_morales=new ArrayList<PersonneMorale>();
		try {
			statement = conn.createStatement();

	        /* Exécution d'une requète de lecture */
	        resultat = statement.executeQuery( "select * from personne_morale" );
	 
	        /* Récupération des données du résultat de la requète de lecture */
	        while ( resultat.next() ) {
	        	Date date;
				try {
					date = formatter.parse(resultat.getString(3));
		        	personne_morales.add(new PersonneMorale(database.getClient(Integer.parseInt(resultat.getString(1))),resultat.getString(2),date,resultat.getString(4),resultat.getString(5),resultat.getString(6)));

				} catch (ParseException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
		}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        
		return personne_morales;
	}

	@Override
	public String toString() {
		return client.getIdClient() + " " + label + " " + dateCreation
				+ " " + nomGerant + " " + prenomGerant + " " + adresse;
	}

}
